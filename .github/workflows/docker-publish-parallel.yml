name: Build Docker Images (Parallel)

# This is an experimental parallel build workflow that can be 2x faster
# by building AMD64 and ARM64 on separate runners simultaneously

on:
  workflow_dispatch: # Manual trigger for testing

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/tianshanghong/relayforge

jobs:
  # Build ARM64 on Buildjet
  build-arm64:
    runs-on: buildjet-2vcpu-ubuntu-2204-arm
    timeout-minutes: 15
    strategy:
      matrix:
        service: [oauth-service, mcp-gateway, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile
          platforms: linux/arm64
          tags: ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:arm64-${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:buildcache-arm64
          cache-to: type=inline
          push: true

  # Build AMD64 on GitHub runners (native, fast)
  build-amd64:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        service: [oauth-service, mcp-gateway, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64
          tags: ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:amd64-${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:buildcache-amd64
          cache-to: type=inline
          push: true

  # Combine manifests after both platforms are built
  combine-manifests:
    needs: [build-arm64, build-amd64]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [oauth-service, mcp-gateway, frontend]
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create multi-platform manifest
        run: |
          docker manifest create \
            ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:${{ github.sha }} \
            ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:arm64-${{ github.sha }} \
            ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:amd64-${{ github.sha }}
          docker manifest push ${{ env.IMAGE_PREFIX }}/${{ matrix.service }}:${{ github.sha }}