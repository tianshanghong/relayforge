version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-bookworm
    restart: unless-stopped
    environment:
      POSTGRES_DB: relayforge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # OAuth Service
  oauth-service:
    image: ghcr.io/tianshanghong/relayforge/oauth-service:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3002
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/relayforge
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      COOKIE_SECRET: ${COOKIE_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-https://api.yourdomain.com/oauth/google/callback}
      FRONTEND_URL: ${FRONTEND_URL:-https://yourdomain.com}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-${FRONTEND_URL:-https://yourdomain.com},http://localhost:5173}
      ADMIN_KEY: ${ADMIN_KEY}
    # Uses Node.js health check from Dockerfile

  # MCP Gateway
  mcp-gateway:
    image: ghcr.io/tianshanghong/relayforge/mcp-gateway:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      oauth-service:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/relayforge
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      OAUTH_SERVICE_URL: http://oauth-service:3002
      MCP_BASE_URL: ${MCP_BASE_URL:-https://api.yourdomain.com}
      GOOGLE_CALENDAR_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CALENDAR_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      COOKIE_SECRET: ${COOKIE_SECRET}
    # Uses Node.js health check from Dockerfile

  # Frontend Application
  frontend:
    image: ghcr.io/tianshanghong/relayforge/frontend:latest
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:stable
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - oauth-service
      - mcp-gateway
volumes:
  postgres_data: